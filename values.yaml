replicaCount: 1
deploymentStrategy: {}
image:
  repository: sonarqube
  tag: 8.9.7-community
  pullPolicy: Always
securityContext:
  fsGroup: 999
svc:
  name: sonarqube
elasticsearch:
  configureNode: true
  bootstrapChecks: true
oauth2:
  enabled: false
  provider: google
  client_id: ''
  client_secret: ''
service:
  type: ClusterIP
  externalPort: 80
  internalPort: 8080
  labels:
  annotations: {}
ingress:
  enabled: true
  host: sonarqube.com
  proxybodysize: "8m"
      # Different clouds or configurations might need /* as the default path
      # path: /
      # For additional control over serviceName and servicePort
      # serviceName: someService
      # servicePort: somePort
  annotations: {}
tls:
  secretName: singletlscert
affinity: {}
tolerations: []
nodeSelector: {}
hostAliases: []
readinessProbe:
  initialDelaySeconds: 60
  periodSeconds: 30
  failureThreshold: 6
  sonarWebContext: /
  # sonarWebContext: /sonarqube/
livenessProbe:
  initialDelaySeconds: 60
  periodSeconds: 30
  # If an ingress *path* other than the root (/) is defined, it should be reflected here
  # A trailing "/" must be included
  sonarWebContext: /
  # sonarWebContext: /sonarqube/
  # If an ingress *path* is defined, it should be reflected here
  # sonar.web.context: /sonarqube
initContainersSecurityContext:
  privileged: true
  #caCerts:
  #  client-cert.pem:  |

## Values to add to SONARQUBE_WEB_JVM_OPTS
##
# jvmOpts: "-Djava.net.preferIPv4Stack=true"
jvmOpts: ""
annotations: {}
resources: {}
#  cpu: 100m
#  memory: 128Mi
# requests:
#  cpu: 100m
#  memory: 128Mi
persistence:
  enabled: false
  annotations: {}
  storageClass:
  accessMode: ReadWriteOnce
  size: 10Gi
  volumes: []
  mounts: []
emptyDir: {}
plugins:
  install:
    - https://github.com/deepy/sonar-crowd/releases/download/2.1.3/sonar-crowd-plugin-2.1.3.jar
    - https://github.com/kogitant/sonar-slack-notifier-plugin/releases/download/2.1.2/cks-slack-notifier-2.1.2.jar
    - https://github.com/stevespringett/dependency-check-sonar-plugin/releases/download/1.1.1/sonar-dependency-check-plugin-1.1.1.jar
    - https://github.com/mc1arke/sonarqube-community-branch-plugin/releases/download/1.3.2/sonarqube-community-branch-plugin-1.3.2.jar
  lib: []
  resources: {}
  # We allow the plugins init container to have a separate resources declaration because
  # the initContainer does not take as much resources.
sonarProperties:
  sonar.ce.workerCount: 3
  sonar.log.level: INFO
  sonar.authenticator.createUsers: true
  sonar.web.host: 0.0.0.0
  sonar.web.port: 8080
  #sonar.jdbc.url: jdbc:postgresql://10.100.81.4/sonarqube?ssl=true&sslmode=verify-ca&sslrootcert=/root/Sonarqube/sonarqube/server-ca.pem&sslkey=/root/Sonarqube/sonarqube/client-key.pem&sslcert=/root/Sonarqube/sonarqube/client-cert.pem
# Kubernetes secret that contains the encryption key for the sonarqube instance.
# The secret must contain the key 'sonar-secret.txt'.
# The 'sonar.secretKeyPath' property will be set automatically.
# sonarSecretKey: "settings-encryption-secret"

## JDBC Database Type; by default postgresql. To use a different Database type, adjust
jdbcDatabaseType: postgresql

## Override JDBC URL
#jdbcUrlOverride: "jdbc:postgresql://myPostgress/myDatabase;socketTimeout=1500"
jdbcUrlOverride: ""

## Configuration values for postgresql dependency
## ref: https://github.com/kubernetes/charts/blob/master/stable/postgresql/README.md
postgresql:
  # Enable to deploy the PostgreSQL chart
  enabled: false
  # To use an external PostgreSQL instance, set enabled to false and uncomment
  # the line below:
  postgresqlServer: 10.100.81.4
  # To use an external secret for the password for an external PostgreSQL
  # instance, set enabled to false and provide the name of the secret on the
  # line below:
  # existingSecret: ""
  postgresqlUsername: "sonarqube"
  postgresqlPassword: "Replace with db password"
  postgresqlDatabase: "sonarqube"
  # Specify the TCP port that PostgreSQL should use
  service:
    port: 5432

# Additional labels to add to the pods:
# podLabels:
#   key: value
podLabels: {}
# For compatibility with 8.0 replace by "/opt/sq"
# For compatibility with 8.2, leave the default. They changed it back to /opt/sonarqube
sonarqubeFolder: /opt/sonarqube

enableTests: true

serviceAccount:
  create: false
  # name:
  ## Annotations for the Service Account
  annotations: {}

# extraConfig is used to load Environment Variables from Secrets and ConfigMaps
# which may have been written by other tools, such as external orchestrators.
#
# These Secrets/ConfigMaps are expected to contain Key/Value pairs, such as:
#
# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: external-sonarqube-opts
# data:
#   SONARQUBE_JDBC_USERNAME: foo
#   SONARQUBE_JDBC_URL: jdbc:postgresql://db.example.com:5432/sonar
#
# These vars can then be injected into the environment by uncommenting the following:
#
# extraConfig:
#   configmaps:
#     - external-sonarqube-opts

extraConfig:
  secrets: []
  configmaps: [] 
# account:
#   adminPassword: admin
#   currentAdminPassword: admin
# curlContainerImage: curlimages/curl:latest
